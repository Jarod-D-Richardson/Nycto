const chip = @import("chip.zig");
const Register = chip.Register;

pub const RCC = extern struct {
    CR: Register(packed struct {
        hsion: u1,
        hsirdy: u1,
        reserved0: u1,
        hsitrim: u5,
        hsical: u8,
        hseon: u1,
        hserd: u1,
        hsebyp: u1,
        csson: u1,
        reserved1: u4,
        pllon: u1,
        plrdy: u1,
        pl2on: u1,
        pll2rdy: u1,
        pll3on: u1,
        pll3rdy: u1,
        reserved2: u2,
    }),
    CFGR: Register(u32),
    CIR: Register(u32),
    APB2RSTR: Register(u32),
    APB1RSTR: Register(u32),
    AHBENR: Register(u32),
    APB2ENR: Register(packed struct(u32) {
        afioen: u1,
        reserved0: u1,
        iopaen: u1,
        iopben: u1,
        iopcen: u1,
        iopden: u1,
        iopeen: u1,
        reserved1: u2,
        adc1en: u1,
        adc2en: u1,
        time1en: u1,
        spi1en: u1,
        reserved2: u1,
        usart1en: u1,
        reserved3: u17,
    }),
    APB1ENR: Register(packed struct(u32) {
        tim2en: u1,
        tim3en: u1,
        tim4en: u1,
        tim5en: u1,
        tim6en: u1,
        tim7en: u1,
        reserved0: u5,
        wwdgen: u1,
        reserved1: u2,
        spi2en: u1,
        spi3en: u1,
        reserved2: u1,
        usart2en: u1,
        usart3en: u1,
        uart4en: u1,
        uart53n: u1,
        i2c1en: u1,
        u2c2en: u1,
        reserved3:u2,
        can1en: u1,
        can2en: u1,
        bpken: u1,
        pwren: u1,
        dacen: u1,
        reserved4: u2,
    }),
    BDCR: Register(u32),
    CSR: Register(u32),
    AHBSTR: Register(u32),
    CFGR2: Register(u32),
};

